@page "/device/{deviceGuid}"
@using flexGateway.Shared
@inject HttpClient Http
@inject DialogService DialogService
@inject NotificationService NotificationService

@if (Device == null)
{
    <p>Loading device info...</p>
}
else
{
    <RadzenCard>
        <div class="row">
            <div class="col-md-6">
                <div>Name:</div>
                <b>@Device.Name</b>
            </div>
            <div class="col-md-6">
                <div>Guid:</div>
                <b>@Device.Guid</b>
            </div>
        </div>

        <div class="row">
            <div class="col-md-6">
                <div>Type:</div>
                <b>@Device.TypeFullName</b>
            </div>
            <div class="col-md-6">
                <div>Source:</div>
                <b>@Device.IsSource</b>
            </div>
        </div>
    </RadzenCard>

    <div class="row">
        <div class="col-md-12">
            <RadzenButton Style="margin-top:1rem;" Click="@(() => this.DialogService.Close(true))" Text="Close"></RadzenButton>
        </div>
    </div>

}



@code {
    [Parameter] public Guid DeviceGuid { get; set; }
    public DeviceModel Device { get; set; }

    protected override async Task OnInitializedAsync()
    {
        var res = await Http.GetAsync($"api/device/getDevice/{DeviceGuid}");
        if (res.IsSuccessStatusCode)
        {
            Device = await res.Content.ReadFromJsonAsync<DeviceModel>();
        }
        else
        {
            NotificationService.Notify(new NotificationMessage()
            {
                Duration = 4000,
                Severity = NotificationSeverity.Error,
                Detail = "Error",
                Summary = "Device not found"
            });
        }
    }
}
